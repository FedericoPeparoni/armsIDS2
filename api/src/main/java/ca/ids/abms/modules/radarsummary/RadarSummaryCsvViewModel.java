package ca.ids.abms.modules.radarsummary;

import ca.ids.abms.modules.common.mappers.Time4Digits;
import ca.ids.abms.modules.util.models.VersionedViewModel;

import javax.persistence.Id;
import javax.validation.constraints.Size;
import java.time.LocalDateTime;
import java.util.List;

/**
 * The radar summary is generated by systems such as the EUROCAT-C or Raytheon.
 * The radar summary contains the FIR entry and exit points and times for each flight.
 * Created by c.talpa on 05/01/2017.
 */
public class RadarSummaryViewModel extends VersionedViewModel {

    @Id
    private Integer id;

    private LocalDateTime date;

    @Size(min = 1, max = 10)
    private String flightIdentifier;

    private LocalDateTime dayOfFlight;

    @Time4Digits
    private String departureTime;

    private String registration;

    private String  aircraftType;

    private String departureAeroDrome;

    private String destinationAeroDrome;

    private String route;

    private String firEntryPoint;

    @Time4Digits
    private String firEntryTime;

    private LocalDateTime firEntryDate;

    private String firExitPoint;

    @Time4Digits
    private String firExitTime;

    private String flightRule;

    private FlightTravelCategory flightTravelCategory;

    private List<RadarSummaryWaypoint> waypoints;

    private String cruisingSpeed;

    private String wakeTurb;

    private String flightLevel;

    private String firEntryFlightLevel;

    private String firExitFlightLevel;

    private Integer segment;

    private String entryCoordinate;
    private String exitCoordinate;

    public String getEntryCoordinate() {
        return entryCoordinate;
    }

    public void setEntryCoordinate(String entryCoordinate) {
        this.entryCoordinate = entryCoordinate;
    }

    public String getExitCoordinate() {
        return exitCoordinate;
    }

    public void setExitCoordinate(String exitCoordinate) {
        this.exitCoordinate = exitCoordinate;
    }

    public Integer getSegment() {
        return segment;
    }

    public void setSegment(Integer segment) {
        this.segment = segment;
    }

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public LocalDateTime getDate() {
        return date;
    }

    public void setDate(LocalDateTime date) {
        this.date = date;
    }

    public String getFlightIdentifier() {
        return flightIdentifier;
    }

    public void setFlightIdentifier(String flightIdentifier) {
        this.flightIdentifier = flightIdentifier;
    }

    public LocalDateTime getDayOfFlight() {
        return dayOfFlight;
    }

    public void setDayOfFlight(LocalDateTime dayOfFlight) {
        this.dayOfFlight = dayOfFlight;
    }

    public String getDepartureTime() {
        return departureTime;
    }

    public void setDepartureTime(String departureTime) {
        this.departureTime = departureTime;
    }

    public String getRegistration() {
        return registration;
    }

    public void setRegistration(String registration) {
        this.registration = registration;
    }

    public String getAircraftType() {
        return aircraftType;
    }

    public void setAircraftType(String aircraftType) {
        this.aircraftType = aircraftType;
    }

    public String getDepartureAeroDrome() {
        return departureAeroDrome;
    }

    public void setDepartureAeroDrome(String departureAeroDrome) {
        this.departureAeroDrome = departureAeroDrome;
    }

    public String getDestinationAeroDrome() {
        return destinationAeroDrome;
    }

    public void setDestinationAeroDrome(String destinationAeroDrome) {
        this.destinationAeroDrome = destinationAeroDrome;
    }

    public String getRoute() {
        return route;
    }

    public void setRoute(String route) {
        this.route = route;
    }

    public String getFirEntryPoint() {
        return firEntryPoint;
    }

    public void setFirEntryPoint(String firEntryPoint) {
        this.firEntryPoint = firEntryPoint;
    }

    public String getFirEntryTime() {
        return firEntryTime;
    }

    public void setFirEntryTime(String firEntryTime) {
        this.firEntryTime = firEntryTime;
    }

    public String getFirExitPoint() {
        return firExitPoint;
    }

    public void setFirExitPoint(String firExitPoint) {
        this.firExitPoint = firExitPoint;
    }

    public String getFirExitTime() {
        return firExitTime;
    }

    public void setFirExitTime(String firExitTime) {
        this.firExitTime = firExitTime;
    }

    public String getFlightRule() {
        return flightRule;
    }

    public void setFlightRule(String flightRule) {
        this.flightRule = flightRule;
    }

    public FlightTravelCategory getFlightTravelCategory() {
        return flightTravelCategory;
    }

    public void setFlightTravelCategory(FlightTravelCategory flightTravelCategory) {
        this.flightTravelCategory = flightTravelCategory;
    }

    public List<RadarSummaryWaypoint> getWaypoints() {
        return waypoints;
    }

    public void setWaypoints(List<RadarSummaryWaypoint> waypoints) {
        this.waypoints = waypoints;
    }

    public String getCruisingSpeed() {
        return cruisingSpeed;
    }

    public void setCruisingSpeed(String cruisingSpeed) {
        this.cruisingSpeed = cruisingSpeed;
    }

    public String getWakeTurb() {
        return wakeTurb;
    }

    public void setWakeTurb(String wakeTurb) {
        this.wakeTurb = wakeTurb;
    }

    public String getFlightLevel() {
        return flightLevel;
    }

    public void setFlightLevel(String flightLevel) {
        this.flightLevel = flightLevel;
    }

    public String getFirEntryFlightLevel() {
        return firEntryFlightLevel;
    }

    public void setFirEntryFlightLevel(String firEntryFlightLevel) {
        this.firEntryFlightLevel = firEntryFlightLevel;
    }

    public String getFirExitFlightLevel() {
        return firExitFlightLevel;
    }

    public void setFirExitFlightLevel(String firExitFlightLevel) {
        this.firExitFlightLevel = firExitFlightLevel;
    }

    @Override
    public int hashCode() {
        return id != null ? id.hashCode() : 0;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        RadarSummaryViewModel that = (RadarSummaryViewModel) o;

        return id != null ? id.equals(that.id) : that.id == null;

    }

    @Override
    public String toString() {
        return "RadarSummary{" +
            "id=" + id +
            ", date=" + date +
            ", flightIdentifier=" + flightIdentifier +
            ", dayOfFlight=" + dayOfFlight +
            ", registration='" + registration + '\'' +
            '}';
    }


}
